00000000 :                       #  read_long:
00000000 :                       #  .LFB0:
00000000 : 517008000000          #      subq $8, %rsp
00000006 : 39B7                  #      movq %r11, (%rsp)
00000008 : A4B000000010          #      leaq 268435456, %r11
0000000e : 310B                  #      movq (%r11), %rax
00000010 : 31B7                  #      movq (%rsp), %r11
00000012 : 507008000000          #      addq $8, %rsp
00000018 : 010B                  #      ret %r11
0000001a :                       #  gen_random:
0000001a :                       #  .LFB1:
0000001a : 517008000000          #      subq $8, %rsp
00000020 : 39B7                  #      movq %r11, (%rsp)
00000022 : A4B001000010          #      leaq 268435457, %r11
00000028 : 310B                  #      movq (%r11), %rax
0000002a : 31B7                  #      movq (%rsp), %r11
0000002c : 507008000000          #      addq $8, %rsp
00000032 : 010B                  #      ret %r11
00000034 :                       #  write_long:
00000034 :                       #  .LFB2:
00000034 : 517008000000          #      subq $8, %rsp
0000003a : 39B7                  #      movq %r11, (%rsp)
0000003c : A4B002000010          #      leaq 268435458, %r11
00000042 : 396B                  #      movq %rdi, (%r11)
00000044 : 31B7                  #      movq (%rsp), %r11
00000046 : 507008000000          #      addq $8, %rsp
0000004c : 010B                  #      ret %r11
0000004e :                       #  get_argc:
0000004e :                       #  .LFB3:
0000004e : 517008000000          #      subq $8, %rsp
00000054 : 39B7                  #      movq %r11, (%rsp)
00000056 : A4B000000020          #      leaq 536870912, %r11
0000005c : 310B                  #      movq (%r11), %rax
0000005e : 31B7                  #      movq (%rsp), %r11
00000060 : 507008000000          #      addq $8, %rsp
00000066 : 010B                  #      ret %r11
00000068 :                       #  read_argv:
00000068 :                       #  .LFB4:
00000068 : 517008000000          #      subq $8, %rsp
0000006e : 39B7                  #      movq %r11, (%rsp)
00000070 : B6B06308000020        #      leaq 536870920(, %rdi, 8), %r11
00000077 : 310B                  #      movq (%r11), %rax
00000079 : 31B7                  #      movq (%rsp), %r11
0000007b : 507008000000          #      addq $8, %rsp
00000081 : 010B                  #      ret %r11
00000083 :                       #  print_array:
00000083 :                       #  .LFB7:
00000083 : 517020000000          #      subq $32, %rsp
00000089 : 7DB718000000          #      movq %r11, 24(%rsp)
0000008f : 7DC710000000          #      movq %r12, 16(%rsp)
00000095 : 7D4708000000          #      movq %rbp, 8(%rsp)
0000009b : 3917                  #      movq %rbx, (%rsp)
0000009d : 2146                  #      movq %rdi, %rbp
0000009f : 21C5                  #      movq %rsi, %r12
000000a1 : 641000000000          #      movq $0, %ebx
000000a7 :                       #  .L7:
000000a7 : 4514c4000000          #      cble %rbp, %rbx, .L10
000000ad : 93BC13                #      leaq (%r12, %rbx, 8), %r11
000000b0 : 316B                  #      movq (%r11), %rdi
000000b2 : 4EB034000000          #      call write_long, %r11
000000b8 : 501001000000          #      addq $1, %rbx
000000be : 4F00a7000000          #      jmp .L7
000000c4 :                       #  .L10:
000000c4 : 3117                  #      movq (%rsp), %rbx
000000c6 : 754708000000          #      movq 8(%rsp), %rbp
000000cc : 75C710000000          #      movq 16(%rsp), %r12
000000d2 : 75B718000000          #      movq 24(%rsp), %r11
000000d8 : 507020000000          #      addq $32, %rsp
000000de : 010B                  #      ret %r11
000000e0 :                       #  init_allocator:
000000e0 :                       #  .LFB8:
000000e0 : 517008000000          #      subq $8, %rsp
000000e6 : 39B7                  #      movq %r11, (%rsp)
000000e8 : A4B088040000          #      leaq cur_allocator, %r11
000000ee : 64A000000030          #      movq $805306368, %r10
000000f4 : 39AB                  #      movq %r10, (%r11)
000000f6 : 31B7                  #      movq (%rsp), %r11
000000f8 : 507008000000          #      addq $8, %rsp
000000fe : 010B                  #      ret %r11
00000100 :                       #  allocate:
00000100 :                       #  .LFB9:
00000100 : 517008000000          #      subq $8, %rsp
00000106 : 39B7                  #      movq %r11, (%rsp)
00000108 : A4B088040000          #      leaq cur_allocator, %r11
0000010e : 310B                  #      movq (%r11), %rax
00000110 : 933063                #      leaq (%rax, %rdi, 8), %rdx
00000113 : A4B088040000          #      leaq cur_allocator, %r11
00000119 : 393B                  #      movq %rdx, (%r11)
0000011b : 31B7                  #      movq (%rsp), %r11
0000011d : 507008000000          #      addq $8, %rsp
00000123 : 010B                  #      ret %r11
00000125 :                       #  get_random_array:
00000125 :                       #  .LFB5:
00000125 : 517028000000          #      subq $40, %rsp
0000012b : 7DB720000000          #      movq %r11, 32(%rsp)
00000131 : 7DD718000000          #      movq %r13, 24(%rsp)
00000137 : 7DC710000000          #      movq %r12, 16(%rsp)
0000013d : 7D4708000000          #      movq %rbp, 8(%rsp)
00000143 : 3917                  #      movq %rbx, (%rsp)
00000145 : 21C6                  #      movq %rdi, %r12
00000147 : 4EB000010000          #      call allocate, %r11
0000014d : 21D0                  #      movq %rax, %r13
0000014f : 641000000000          #      movq $0, %ebx
00000155 :                       #  .L14:
00000155 : 451C80010000          #      cble %r12, %rbx, .L17
0000015b : B74D1300000000        #      leaq 0(%r13, %rbx, 8), %rbp
00000162 : 640000000000          #      movq $0, %eax
00000168 : 4EB01a000000          #      call gen_random, %r11
0000016e : 7D0400000000          #      movq %rax, 0(%rbp)
00000174 : 501001000000          #      addq $1, %rbx
0000017a : 4F0055010000          #      jmp .L14
00000180 :                       #  .L17:
00000180 : 210D                  #      movq %r13, %rax
00000182 : 3117                  #      movq (%rsp), %rbx
00000184 : 754708000000          #      movq 8(%rsp), %rbp
0000018a : 75C710000000          #      movq 16(%rsp), %r12
00000190 : 75D718000000          #      movq 24(%rsp), %r13
00000196 : 75B720000000          #      movq 32(%rsp), %r11
0000019c : 507028000000          #      addq $40, %rsp
000001a2 : 010B                  #      ret %r11
000001a4 :                       #  read_array:
000001a4 :                       #  .LFB6:
000001a4 : 517028000000          #      subq $40, %rsp
000001aa : 7DB720000000          #      movq %r11, 32(%rsp)
000001b0 : 7DD718000000          #      movq %r13, 24(%rsp)
000001b6 : 7DC710000000          #      movq %r12, 16(%rsp)
000001bc : 7D4708000000          #      movq %rbp, 8(%rsp)
000001c2 : 3917                  #      movq %rbx, (%rsp)
000001c4 : 21C6                  #      movq %rdi, %r12
000001c6 : 4EB000010000          #      call allocate, %r11
000001cc : 21D0                  #      movq %rax, %r13
000001ce : 641000000000          #      movq $0, %ebx
000001d4 :                       #  .L19:
000001d4 : 451Cff010000          #      cble %r12, %rbx, .L22
000001da : B74D1300000000        #      leaq 0(%r13, %rbx, 8), %rbp
000001e1 : 640000000000          #      movq $0, %eax
000001e7 : 4EB000000000          #      call read_long, %r11
000001ed : 7D0400000000          #      movq %rax, 0(%rbp)
000001f3 : 501001000000          #      addq $1, %rbx
000001f9 : 4F00d4010000          #      jmp .L19
000001ff :                       #  .L22:
000001ff : 210D                  #      movq %r13, %rax
00000201 : 3117                  #      movq (%rsp), %rbx
00000203 : 754708000000          #      movq 8(%rsp), %rbp
00000209 : 75C710000000          #      movq 16(%rsp), %r12
0000020f : 75D718000000          #      movq 24(%rsp), %r13
00000215 : 75B720000000          #      movq 32(%rsp), %r11
0000021b : 507028000000          #      addq $40, %rsp
00000221 : 010B                  #      ret %r11
00000223 :                       #  merge_runs:
00000223 :                       #  .LFB11:
00000223 : 517008000000          #      subq $8, %rsp
00000229 : 39B7                  #      movq %r11, (%rsp)
0000022b : F0600000000017030000  #      cbe $0, %rdi, .L37
00000235 : 517020000000          #      subq $32, %rsp
0000023b : 7DD718000000          #      movq %r13, 24(%rsp)
00000241 : 7DC710000000          #      movq %r12, 16(%rsp)
00000247 : 7D4708000000          #      movq %rbp, 8(%rsp)
0000024d : 3917                  #      movq %rbx, (%rsp)
0000024f : 4F00d0020000          #      jmp .L32
00000255 :                       #  .L33:
00000255 : 21A5                  #      movq %rsi, %r10
00000257 : 4F00dd020000          #      jmp .L25
0000025d :                       #  .L29:
0000025d : 508008000000          #      addq $8, %r8
00000263 : 3919                  #      movq %rbx, (%r9)
00000265 : 4F0085020000          #      jmp .L30
0000026b :                       #  .L28:
0000026b : 3110                  #      movq (%rax), %rbx
0000026d : 3919                  #      movq %rbx, (%r9)
0000026f : A50008000000          #      leaq 8(%rax), %rax
00000275 : 4F0085020000          #      jmp .L30
0000027b :                       #  .L27:
0000027b : 3118                  #      movq (%r8), %rbx
0000027d : 3919                  #      movq %rbx, (%r9)
0000027f : A58808000000          #      leaq 8(%r8), %r8
00000285 :                       #  .L30:
00000285 : 509008000000          #      addq $8, %r9
0000028b :                       #  .L26:
0000028b : 49C9b5020000          #      cbae %r9, %r12, .L38
00000291 : 49B07b020000          #      cbae %rax, %r11, .L27
00000297 : 49D86b020000          #      cbae %r8, %r13, .L28
0000029d : 3140                  #      movq (%rax), %rbp
0000029f : 3118                  #      movq (%r8), %rbx
000002a1 : 45415d020000          #      cble %rbx, %rbp, .L29
000002a7 : 500008000000          #      addq $8, %rax
000002ad : 3949                  #      movq %rbp, (%r9)
000002af : 4F0085020000          #      jmp .L30
000002b5 :                       #  .L38:
000002b5 : 9305A0                #      leaq (%rsi, %r10, 1), %rax
000002b8 : 570003000000          #      salq $3, %rax
000002be : 1030                  #      addq %rax, %rdx
000002c0 : 1020                  #      addq %rax, %rcx
000002c2 : 1165                  #      subq %rsi, %rdi
000002c4 : 116A                  #      subq %r10, %rdi
000002c6 : F06000000000f5020000  #      cbe $0, %rdi, .L39
000002d0 :                       #  .L32:
000002d0 : 930550                #      leaq (%rsi, %rsi, 1), %rax
000002d3 : 470655020000          #      cbge %rdi, %rax, .L33
000002d9 : 21A6                  #      movq %rdi, %r10
000002db : 11A5                  #      subq %rsi, %r10
000002dd :                       #  .L25:
000002dd : 93B353                #      leaq (%rdx, %rsi, 8), %r11
000002e0 : 93DBA3                #      leaq (%r11, %r10, 8), %r13
000002e3 : 9305A0                #      leaq (%rsi, %r10, 1), %rax
000002e6 : 93C203                #      leaq (%rcx, %rax, 8), %r12
000002e9 : 2192                  #      movq %rcx, %r9
000002eb : 218B                  #      movq %r11, %r8
000002ed : 2103                  #      movq %rdx, %rax
000002ef : 4F008b020000          #      jmp .L26
000002f5 :                       #  .L39:
000002f5 : 3117                  #      movq (%rsp), %rbx
000002f7 : 754708000000          #      movq 8(%rsp), %rbp
000002fd : 75C710000000          #      movq 16(%rsp), %r12
00000303 : 75D718000000          #      movq 24(%rsp), %r13
00000309 : 75B720000000          #      movq 32(%rsp), %r11
0000030f : 507028000000          #      addq $40, %rsp
00000315 : 010B                  #      ret %r11
00000317 :                       #  .L37:
00000317 : 31B7                  #      movq (%rsp), %r11
00000319 : 507008000000          #      addq $8, %rsp
0000031f : 010B                  #      ret %r11
00000321 :                       #  merge_sort:
00000321 :                       #  .LFB12:
00000321 : 517030000000          #      subq $48, %rsp
00000327 : 7DB728000000          #      movq %r11, 40(%rsp)
0000032d : 7DE720000000          #      movq %r14, 32(%rsp)
00000333 : 7DD718000000          #      movq %r13, 24(%rsp)
00000339 : 7DC710000000          #      movq %r12, 16(%rsp)
0000033f : 7D4708000000          #      movq %rbp, 8(%rsp)
00000345 : 3917                  #      movq %rbx, (%rsp)
00000347 : 21C6                  #      movq %rdi, %r12
00000349 : 21E5                  #      movq %rsi, %r14
0000034b : 4EB000010000          #      call allocate, %r11
00000351 : 21D0                  #      movq %rax, %r13
00000353 : 214E                  #      movq %r14, %rbp
00000355 : 641001000000          #      movq $1, %ebx
0000035b :                       #  .L41:
0000035b : 451C7d030000          #      cble %r12, %rbx, .L48
00000361 : 212D                  #      movq %r13, %rcx
00000363 : 2134                  #      movq %rbp, %rdx
00000365 : 2151                  #      movq %rbx, %rsi
00000367 : 216C                  #      movq %r12, %rdi
00000369 : 4EB023020000          #      call merge_runs, %r11
0000036f : 1011                  #      addq %rbx, %rbx
00000371 : 2104                  #      movq %rbp, %rax
00000373 : 214D                  #      movq %r13, %rbp
00000375 : 21D0                  #      movq %rax, %r13
00000377 : 4F005b030000          #      jmp .L41
0000037d :                       #  .L48:
0000037d : 404Ea9030000          #      cbe %r14, %rbp, .L40
00000383 : 640000000000          #      movq $0, %eax
00000389 :                       #  .L43:
00000389 : 450Ca9030000          #      cble %r12, %rax, .L40
0000038f : B7B40300000000        #      leaq 0(%rbp, %rax, 8), %r11
00000396 : 313B                  #      movq (%r11), %rdx
00000398 : 93BE03                #      leaq (%r14, %rax, 8), %r11
0000039b : 393B                  #      movq %rdx, (%r11)
0000039d : 500001000000          #      addq $1, %rax
000003a3 : 4F0089030000          #      jmp .L43
000003a9 :                       #  .L40:
000003a9 : 3117                  #      movq (%rsp), %rbx
000003ab : 754708000000          #      movq 8(%rsp), %rbp
000003b1 : 75C710000000          #      movq 16(%rsp), %r12
000003b7 : 75D718000000          #      movq 24(%rsp), %r13
000003bd : 75E720000000          #      movq 32(%rsp), %r14
000003c3 : 75B728000000          #      movq 40(%rsp), %r11
000003c9 : 507030000000          #      addq $48, %rsp
000003cf : 010B                  #      ret %r11
000003d1 :                       #  run:
000003d1 :                       #  .LFB13:
000003d1 : 517020000000          #      subq $32, %rsp
000003d7 : 7DB718000000          #      movq %r11, 24(%rsp)
000003dd : 7DC710000000          #      movq %r12, 16(%rsp)
000003e3 : 7D4708000000          #      movq %rbp, 8(%rsp)
000003e9 : 3917                  #      movq %rbx, (%rsp)
000003eb : 640000000000          #      movq $0, %eax
000003f1 : 4EB0e0000000          #      call init_allocator, %r11
000003f7 : 640000000000          #      movq $0, %eax
000003fd : 4EB000000000          #      call read_long, %r11
00000403 : 2140                  #      movq %rax, %rbp
00000405 : 524001000000          #      andq $1, %ebp
0000040b : 520002000000          #      andq $2, %eax
00000411 : 2110                  #      movq %rax, %rbx
00000413 : 640000000000          #      movq $0, %eax
00000419 : 4EB000000000          #      call read_long, %r11
0000041f : 21C0                  #      movq %rax, %r12
00000421 : F0100000000067040000  #      cbe $0, %rbx, .L50
0000042b : 2160                  #      movq %rax, %rdi
0000042d : 4EB0a4010000          #      call read_array, %r11
00000433 : 2110                  #      movq %rax, %rbx
00000435 :                       #  .L51:
00000435 : 2151                  #      movq %rbx, %rsi
00000437 : 216C                  #      movq %r12, %rdi
00000439 : 4EB021030000          #      call merge_sort, %r11
0000043f : F1400000000077040000  #      cbne $0, %rbp, .L54
00000449 :                       #  .L49:
00000449 : 2101                  #      movq %rbx, %rax
0000044b : 3117                  #      movq (%rsp), %rbx
0000044d : 754708000000          #      movq 8(%rsp), %rbp
00000453 : 75C710000000          #      movq 16(%rsp), %r12
00000459 : 75B718000000          #      movq 24(%rsp), %r11
0000045f : 507020000000          #      addq $32, %rsp
00000465 : 010B                  #      ret %r11
00000467 :                       #  .L50:
00000467 : 2160                  #      movq %rax, %rdi
00000469 : 4EB025010000          #      call get_random_array, %r11
0000046f : 2110                  #      movq %rax, %rbx
00000471 : 4F0035040000          #      jmp .L51
00000477 :                       #  .L54:
00000477 : 2151                  #      movq %rbx, %rsi
00000479 : 216C                  #      movq %r12, %rdi
0000047b : 4EB083000000          #      call print_array, %r11
00000481 : 4F0049040000          #      jmp .L49
00000487 :                       #  .LFE0:
00000487 :                       #  .LFE1:
00000487 :                       #  .LFE2:
00000487 :                       #  .LFE3:
00000487 :                       #  .LFE4:
00000487 :                       #  .LFE7:
00000487 :                       #  .LFE8:
00000487 :                       #  .LFE9:
00000487 :                       #  .LFE5:
00000487 :                       #  .LFE6:
00000487 :                       #  .LFE11:
00000487 :                       #  .LFE12:
00000487 :                       #  .LFE13:
00000488 : 0000000000000000      #      .comm cur_allocator,8,8
