00000000 :                       #  read_long:
00000000 :                       #  .LFB0:
00000000 : 517008000000          #      subq $8, %rsp
00000006 : 39B7                  #      movq %r11, (%rsp)
00000008 : A4B000000010          #      leaq 268435456, %r11
0000000e : 310B                  #      movq (%r11), %rax
00000010 : 31B7                  #      movq (%rsp), %r11
00000012 : 507008000000          #      addq $8, %rsp
00000018 : 010B                  #      ret %r11
0000001a :                       #  gen_random:
0000001a :                       #  .LFB1:
0000001a : 517008000000          #      subq $8, %rsp
00000020 : 39B7                  #      movq %r11, (%rsp)
00000022 : A4B001000010          #      leaq 268435457, %r11
00000028 : 310B                  #      movq (%r11), %rax
0000002a : 31B7                  #      movq (%rsp), %r11
0000002c : 507008000000          #      addq $8, %rsp
00000032 : 010B                  #      ret %r11
00000034 :                       #  write_long:
00000034 :                       #  .LFB2:
00000034 : 517008000000          #      subq $8, %rsp
0000003a : 39B7                  #      movq %r11, (%rsp)
0000003c : A4B002000010          #      leaq 268435458, %r11
00000042 : 396B                  #      movq %rdi, (%r11)
00000044 : 31B7                  #      movq (%rsp), %r11
00000046 : 507008000000          #      addq $8, %rsp
0000004c : 010B                  #      ret %r11
0000004e :                       #  get_argc:
0000004e :                       #  .LFB3:
0000004e : 517008000000          #      subq $8, %rsp
00000054 : 39B7                  #      movq %r11, (%rsp)
00000056 : A4B000000020          #      leaq 536870912, %r11
0000005c : 310B                  #      movq (%r11), %rax
0000005e : 31B7                  #      movq (%rsp), %r11
00000060 : 507008000000          #      addq $8, %rsp
00000066 : 010B                  #      ret %r11
00000068 :                       #  read_argv:
00000068 :                       #  .LFB4:
00000068 : 517008000000          #      subq $8, %rsp
0000006e : 39B7                  #      movq %r11, (%rsp)
00000070 : B6B06308000020        #      leaq 536870920(, %rdi, 8), %r11
00000077 : 310B                  #      movq (%r11), %rax
00000079 : 31B7                  #      movq (%rsp), %r11
0000007b : 507008000000          #      addq $8, %rsp
00000081 : 010B                  #      ret %r11
00000083 :                       #  print_array:
00000083 :                       #  .LFB7:
00000083 : 517020000000          #      subq $32, %rsp
00000089 : 7DB718000000          #      movq %r11, 24(%rsp)
0000008f : 7DC710000000          #      movq %r12, 16(%rsp)
00000095 : 7D4708000000          #      movq %rbp, 8(%rsp)
0000009b : 3917                  #      movq %rbx, (%rsp)
0000009d : 2146                  #      movq %rdi, %rbp
0000009f : 21C5                  #      movq %rsi, %r12
000000a1 : 641000000000          #      movq $0, %ebx
000000a7 :                       #  .L7:
000000a7 : 4514c4000000          #      cble %rbp, %rbx, .L10
000000ad : 93BC13                #      leaq (%r12, %rbx, 8), %r11
000000b0 : 316B                  #      movq (%r11), %rdi
000000b2 : 4EB034000000          #      call write_long, %r11
000000b8 : 501001000000          #      addq $1, %rbx
000000be : 4F00a7000000          #      jmp .L7
000000c4 :                       #  .L10:
000000c4 : 3117                  #      movq (%rsp), %rbx
000000c6 : 754708000000          #      movq 8(%rsp), %rbp
000000cc : 75C710000000          #      movq 16(%rsp), %r12
000000d2 : 75B718000000          #      movq 24(%rsp), %r11
000000d8 : 507020000000          #      addq $32, %rsp
000000de : 010B                  #      ret %r11
000000e0 :                       #  init_allocator:
000000e0 :                       #  .LFB8:
000000e0 : 517008000000          #      subq $8, %rsp
000000e6 : 39B7                  #      movq %r11, (%rsp)
000000e8 : A4B058040000          #      leaq cur_allocator, %r11
000000ee : 64A000000030          #      movq $805306368, %r10
000000f4 : 39AB                  #      movq %r10, (%r11)
000000f6 : 31B7                  #      movq (%rsp), %r11
000000f8 : 507008000000          #      addq $8, %rsp
000000fe : 010B                  #      ret %r11
00000100 :                       #  allocate:
00000100 :                       #  .LFB9:
00000100 : 517008000000          #      subq $8, %rsp
00000106 : 39B7                  #      movq %r11, (%rsp)
00000108 : A4B058040000          #      leaq cur_allocator, %r11
0000010e : 310B                  #      movq (%r11), %rax
00000110 : 933063                #      leaq (%rax, %rdi, 8), %rdx
00000113 : A4B058040000          #      leaq cur_allocator, %r11
00000119 : 393B                  #      movq %rdx, (%r11)
0000011b : 31B7                  #      movq (%rsp), %r11
0000011d : 507008000000          #      addq $8, %rsp
00000123 : 010B                  #      ret %r11
00000125 :                       #  get_random_array:
00000125 :                       #  .LFB5:
00000125 : 517028000000          #      subq $40, %rsp
0000012b : 7DB720000000          #      movq %r11, 32(%rsp)
00000131 : 7DD718000000          #      movq %r13, 24(%rsp)
00000137 : 7DC710000000          #      movq %r12, 16(%rsp)
0000013d : 7D4708000000          #      movq %rbp, 8(%rsp)
00000143 : 3917                  #      movq %rbx, (%rsp)
00000145 : 21C6                  #      movq %rdi, %r12
00000147 : 4EB000010000          #      call allocate, %r11
0000014d : 21D0                  #      movq %rax, %r13
0000014f : 641000000000          #      movq $0, %ebx
00000155 :                       #  .L14:
00000155 : 451C80010000          #      cble %r12, %rbx, .L17
0000015b : B74D1300000000        #      leaq 0(%r13, %rbx, 8), %rbp
00000162 : 640000000000          #      movq $0, %eax
00000168 : 4EB01a000000          #      call gen_random, %r11
0000016e : 7D0400000000          #      movq %rax, 0(%rbp)
00000174 : 501001000000          #      addq $1, %rbx
0000017a : 4F0055010000          #      jmp .L14
00000180 :                       #  .L17:
00000180 : 210D                  #      movq %r13, %rax
00000182 : 3117                  #      movq (%rsp), %rbx
00000184 : 754708000000          #      movq 8(%rsp), %rbp
0000018a : 75C710000000          #      movq 16(%rsp), %r12
00000190 : 75D718000000          #      movq 24(%rsp), %r13
00000196 : 75B720000000          #      movq 32(%rsp), %r11
0000019c : 507028000000          #      addq $40, %rsp
000001a2 : 010B                  #      ret %r11
000001a4 :                       #  read_array:
000001a4 :                       #  .LFB6:
000001a4 : 517028000000          #      subq $40, %rsp
000001aa : 7DB720000000          #      movq %r11, 32(%rsp)
000001b0 : 7DD718000000          #      movq %r13, 24(%rsp)
000001b6 : 7DC710000000          #      movq %r12, 16(%rsp)
000001bc : 7D4708000000          #      movq %rbp, 8(%rsp)
000001c2 : 3917                  #      movq %rbx, (%rsp)
000001c4 : 21C6                  #      movq %rdi, %r12
000001c6 : 4EB000010000          #      call allocate, %r11
000001cc : 21D0                  #      movq %rax, %r13
000001ce : 641000000000          #      movq $0, %ebx
000001d4 :                       #  .L19:
000001d4 : 451Cff010000          #      cble %r12, %rbx, .L22
000001da : B74D1300000000        #      leaq 0(%r13, %rbx, 8), %rbp
000001e1 : 640000000000          #      movq $0, %eax
000001e7 : 4EB000000000          #      call read_long, %r11
000001ed : 7D0400000000          #      movq %rax, 0(%rbp)
000001f3 : 501001000000          #      addq $1, %rbx
000001f9 : 4F00d4010000          #      jmp .L19
000001ff :                       #  .L22:
000001ff : 210D                  #      movq %r13, %rax
00000201 : 3117                  #      movq (%rsp), %rbx
00000203 : 754708000000          #      movq 8(%rsp), %rbp
00000209 : 75C710000000          #      movq 16(%rsp), %r12
0000020f : 75D718000000          #      movq 24(%rsp), %r13
00000215 : 75B720000000          #      movq 32(%rsp), %r11
0000021b : 507028000000          #      addq $40, %rsp
00000221 : 010B                  #      ret %r11
00000223 :                       #  sift_down:
00000223 :                       #  .LFB10:
00000223 : 517018000000          #      subq $24, %rsp
00000229 : 7DB710000000          #      movq %r11, 16(%rsp)
0000022f : 7DE708000000          #      movq %r14, 8(%rsp)
00000235 : 39F7                  #      movq %r15, (%rsp)
00000237 : 4F0056020000          #      jmp .L24
0000023d :                       #  .L29:
0000023d : 212A                  #      movq %r10, %rcx
0000023f : 4F007b020000          #      jmp .L25
00000245 :                       #  .L26:
00000245 : 4062a1020000          #      cbe %rcx, %rdi, .L23
0000024b : 930323                #      leaq (%rdx, %rcx, 8), %rax
0000024e : 3160                  #      movq (%rax), %rdi
00000250 : 3969                  #      movq %rdi, (%r9)
00000252 : 3980                  #      movq %r8, (%rax)
00000254 : 2162                  #      movq %rcx, %rdi
00000256 :                       #  .L24:
00000256 : 930660                #      leaq (%rdi, %rdi, 1), %rax
00000259 : 4505a1020000          #      cble %rsi, %rax, .L23
0000025f : A5A001000000          #      leaq 1(%rax), %r10
00000265 : 939363                #      leaq (%rdx, %rdi, 8), %r9
00000268 : 3189                  #      movq (%r9), %r8
0000026a : B7F30308000000        #      leaq 8(%rdx, %rax, 8), %r15
00000271 : 31EF                  #      movq (%r15), %r14
00000273 : 468E3d020000          #      cbg %r14, %r8, .L29
00000279 : 2126                  #      movq %rdi, %rcx
0000027b :                       #  .L25:
0000027b : 475A45020000          #      cbge %r10, %rsi, .L26
00000281 : B7F30310000000        #      leaq 16(%rdx, %rax, 8), %r15
00000288 : 31BF                  #      movq (%r15), %r11
0000028a : 93F323                #      leaq (%rdx, %rcx, 8), %r15
0000028d : 31EF                  #      movq (%r15), %r14
0000028f : 45EB45020000          #      cble %r11, %r14, .L26
00000295 : A52002000000          #      leaq 2(%rax), %rcx
0000029b : 4F0045020000          #      jmp .L26
000002a1 :                       #  .L23:
000002a1 : 31F7                  #      movq (%rsp), %r15
000002a3 : 75E708000000          #      movq 8(%rsp), %r14
000002a9 : 75B710000000          #      movq 16(%rsp), %r11
000002af : 507018000000          #      addq $24, %rsp
000002b5 : 010B                  #      ret %r11
000002b7 :                       #  heapify:
000002b7 :                       #  .LFB11:
000002b7 : 517020000000          #      subq $32, %rsp
000002bd : 7DB718000000          #      movq %r11, 24(%rsp)
000002c3 : 7DC710000000          #      movq %r12, 16(%rsp)
000002c9 : 7D4708000000          #      movq %rbp, 8(%rsp)
000002cf : 3917                  #      movq %rbx, (%rsp)
000002d1 : 2146                  #      movq %rdi, %rbp
000002d3 : 21C5                  #      movq %rsi, %r12
000002d5 : A516feffffff          #      leaq -2(%rdi), %rbx
000002db : 561001000000          #      sarq $1, %rbx
000002e1 :                       #  .L31:
000002e1 : F6100000000007030000  #      cbg $0, %rbx, .L34
000002eb : A554ffffffff          #      leaq -1(%rbp), %rsi
000002f1 : 213C                  #      movq %r12, %rdx
000002f3 : 2161                  #      movq %rbx, %rdi
000002f5 : 4EB023020000          #      call sift_down, %r11
000002fb : 511001000000          #      subq $1, %rbx
00000301 : 4F00e1020000          #      jmp .L31
00000307 :                       #  .L34:
00000307 : 3117                  #      movq (%rsp), %rbx
00000309 : 754708000000          #      movq 8(%rsp), %rbp
0000030f : 75C710000000          #      movq 16(%rsp), %r12
00000315 : 75B718000000          #      movq 24(%rsp), %r11
0000031b : 507020000000          #      addq $32, %rsp
00000321 : 010B                  #      ret %r11
00000323 :                       #  heap_sort:
00000323 :                       #  .LFB12:
00000323 : 517018000000          #      subq $24, %rsp
00000329 : 7DB710000000          #      movq %r11, 16(%rsp)
0000032f : 7D4708000000          #      movq %rbp, 8(%rsp)
00000335 : 3917                  #      movq %rbx, (%rsp)
00000337 : 2116                  #      movq %rdi, %rbx
00000339 : 2145                  #      movq %rsi, %rbp
0000033b : 4EB0b7020000          #      call heapify, %r11
00000341 : 511001000000          #      subq $1, %rbx
00000347 :                       #  .L36:
00000347 : F7100000000084030000  #      cbge $0, %rbx, .L39
00000351 : B7041300000000        #      leaq 0(%rbp, %rbx, 8), %rax
00000358 : 3130                  #      movq (%rax), %rdx
0000035a : 752400000000          #      movq 0(%rbp), %rcx
00000360 : 3920                  #      movq %rcx, (%rax)
00000362 : 7D3400000000          #      movq %rdx, 0(%rbp)
00000368 : 511001000000          #      subq $1, %rbx
0000036e : 2134                  #      movq %rbp, %rdx
00000370 : 2151                  #      movq %rbx, %rsi
00000372 : 646000000000          #      movq $0, %edi
00000378 : 4EB023020000          #      call sift_down, %r11
0000037e : 4F0047030000          #      jmp .L36
00000384 :                       #  .L39:
00000384 : 3117                  #      movq (%rsp), %rbx
00000386 : 754708000000          #      movq 8(%rsp), %rbp
0000038c : 75B710000000          #      movq 16(%rsp), %r11
00000392 : 507018000000          #      addq $24, %rsp
00000398 : 010B                  #      ret %r11
0000039a :                       #  run:
0000039a :                       #  .LFB13:
0000039a : 517020000000          #      subq $32, %rsp
000003a0 : 7DB718000000          #      movq %r11, 24(%rsp)
000003a6 : 7DC710000000          #      movq %r12, 16(%rsp)
000003ac : 7D4708000000          #      movq %rbp, 8(%rsp)
000003b2 : 3917                  #      movq %rbx, (%rsp)
000003b4 : 640000000000          #      movq $0, %eax
000003ba : 4EB0e0000000          #      call init_allocator, %r11
000003c0 : 640000000000          #      movq $0, %eax
000003c6 : 4EB000000000          #      call read_long, %r11
000003cc : 21C0                  #      movq %rax, %r12
000003ce : 52C001000000          #      andq $1, %r12d
000003d4 : 520002000000          #      andq $2, %eax
000003da : 2110                  #      movq %rax, %rbx
000003dc : 640000000000          #      movq $0, %eax
000003e2 : 4EB000000000          #      call read_long, %r11
000003e8 : 2140                  #      movq %rax, %rbp
000003ea : 2160                  #      movq %rax, %rdi
000003ec : 4EB025010000          #      call get_random_array, %r11
000003f2 : F0100000000038040000  #      cbe $0, %rbx, .L41
000003fc : 2164                  #      movq %rbp, %rdi
000003fe : 4EB0a4010000          #      call read_array, %r11
00000404 : 2110                  #      movq %rax, %rbx
00000406 :                       #  .L42:
00000406 : 2151                  #      movq %rbx, %rsi
00000408 : 2164                  #      movq %rbp, %rdi
0000040a : 4EB023030000          #      call heap_sort, %r11
00000410 : F1C00000000048040000  #      cbne $0, %r12, .L45
0000041a :                       #  .L40:
0000041a : 2101                  #      movq %rbx, %rax
0000041c : 3117                  #      movq (%rsp), %rbx
0000041e : 754708000000          #      movq 8(%rsp), %rbp
00000424 : 75C710000000          #      movq 16(%rsp), %r12
0000042a : 75B718000000          #      movq 24(%rsp), %r11
00000430 : 507020000000          #      addq $32, %rsp
00000436 : 010B                  #      ret %r11
00000438 :                       #  .L41:
00000438 : 2164                  #      movq %rbp, %rdi
0000043a : 4EB025010000          #      call get_random_array, %r11
00000440 : 2110                  #      movq %rax, %rbx
00000442 : 4F0006040000          #      jmp .L42
00000448 :                       #  .L45:
00000448 : 2151                  #      movq %rbx, %rsi
0000044a : 2164                  #      movq %rbp, %rdi
0000044c : 4EB083000000          #      call print_array, %r11
00000452 : 4F001a040000          #      jmp .L40
00000458 :                       #  .LFE0:
00000458 :                       #  .LFE1:
00000458 :                       #  .LFE2:
00000458 :                       #  .LFE3:
00000458 :                       #  .LFE4:
00000458 :                       #  .LFE7:
00000458 :                       #  .LFE8:
00000458 :                       #  .LFE9:
00000458 :                       #  .LFE5:
00000458 :                       #  .LFE6:
00000458 :                       #  .LFE10:
00000458 :                       #  .LFE11:
00000458 :                       #  .LFE12:
00000458 :                       #  .LFE13:
00000458 : 0000000000000000      #      .comm cur_allocator,8,8
