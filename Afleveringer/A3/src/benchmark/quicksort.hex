00000000 :                       #  read_long:
00000000 :                       #  .LFB0:
00000000 : 517008000000          #      subq $8, %rsp
00000006 : 39B7                  #      movq %r11, (%rsp)
00000008 : A4B000000010          #      leaq 268435456, %r11
0000000e : 310B                  #      movq (%r11), %rax
00000010 : 31B7                  #      movq (%rsp), %r11
00000012 : 507008000000          #      addq $8, %rsp
00000018 : 010B                  #      ret %r11
0000001a :                       #  gen_random:
0000001a :                       #  .LFB1:
0000001a : 517008000000          #      subq $8, %rsp
00000020 : 39B7                  #      movq %r11, (%rsp)
00000022 : A4B001000010          #      leaq 268435457, %r11
00000028 : 310B                  #      movq (%r11), %rax
0000002a : 31B7                  #      movq (%rsp), %r11
0000002c : 507008000000          #      addq $8, %rsp
00000032 : 010B                  #      ret %r11
00000034 :                       #  write_long:
00000034 :                       #  .LFB2:
00000034 : 517008000000          #      subq $8, %rsp
0000003a : 39B7                  #      movq %r11, (%rsp)
0000003c : A4B002000010          #      leaq 268435458, %r11
00000042 : 396B                  #      movq %rdi, (%r11)
00000044 : 31B7                  #      movq (%rsp), %r11
00000046 : 507008000000          #      addq $8, %rsp
0000004c : 010B                  #      ret %r11
0000004e :                       #  get_argc:
0000004e :                       #  .LFB3:
0000004e : 517008000000          #      subq $8, %rsp
00000054 : 39B7                  #      movq %r11, (%rsp)
00000056 : A4B000000020          #      leaq 536870912, %r11
0000005c : 310B                  #      movq (%r11), %rax
0000005e : 31B7                  #      movq (%rsp), %r11
00000060 : 507008000000          #      addq $8, %rsp
00000066 : 010B                  #      ret %r11
00000068 :                       #  read_argv:
00000068 :                       #  .LFB4:
00000068 : 517008000000          #      subq $8, %rsp
0000006e : 39B7                  #      movq %r11, (%rsp)
00000070 : B6B06308000020        #      leaq 536870920(, %rdi, 8), %r11
00000077 : 310B                  #      movq (%r11), %rax
00000079 : 31B7                  #      movq (%rsp), %r11
0000007b : 507008000000          #      addq $8, %rsp
00000081 : 010B                  #      ret %r11
00000083 :                       #  print_array:
00000083 :                       #  .LFB7:
00000083 : 517020000000          #      subq $32, %rsp
00000089 : 7DB718000000          #      movq %r11, 24(%rsp)
0000008f : 7DC710000000          #      movq %r12, 16(%rsp)
00000095 : 7D4708000000          #      movq %rbp, 8(%rsp)
0000009b : 3917                  #      movq %rbx, (%rsp)
0000009d : 2146                  #      movq %rdi, %rbp
0000009f : 21C5                  #      movq %rsi, %r12
000000a1 : 641000000000          #      movq $0, %ebx
000000a7 :                       #  .L7:
000000a7 : 4514c4000000          #      cble %rbp, %rbx, .L10
000000ad : 93BC13                #      leaq (%r12, %rbx, 8), %r11
000000b0 : 316B                  #      movq (%r11), %rdi
000000b2 : 4EB034000000          #      call write_long, %r11
000000b8 : 501001000000          #      addq $1, %rbx
000000be : 4F00a7000000          #      jmp .L7
000000c4 :                       #  .L10:
000000c4 : 3117                  #      movq (%rsp), %rbx
000000c6 : 754708000000          #      movq 8(%rsp), %rbp
000000cc : 75C710000000          #      movq 16(%rsp), %r12
000000d2 : 75B718000000          #      movq 24(%rsp), %r11
000000d8 : 507020000000          #      addq $32, %rsp
000000de : 010B                  #      ret %r11
000000e0 :                       #  init_allocator:
000000e0 :                       #  .LFB8:
000000e0 : 517008000000          #      subq $8, %rsp
000000e6 : 39B7                  #      movq %r11, (%rsp)
000000e8 : A4B0f8030000          #      leaq cur_allocator, %r11
000000ee : 64A000000030          #      movq $805306368, %r10
000000f4 : 39AB                  #      movq %r10, (%r11)
000000f6 : 31B7                  #      movq (%rsp), %r11
000000f8 : 507008000000          #      addq $8, %rsp
000000fe : 010B                  #      ret %r11
00000100 :                       #  allocate:
00000100 :                       #  .LFB9:
00000100 : 517008000000          #      subq $8, %rsp
00000106 : 39B7                  #      movq %r11, (%rsp)
00000108 : A4B0f8030000          #      leaq cur_allocator, %r11
0000010e : 310B                  #      movq (%r11), %rax
00000110 : 933063                #      leaq (%rax, %rdi, 8), %rdx
00000113 : A4B0f8030000          #      leaq cur_allocator, %r11
00000119 : 393B                  #      movq %rdx, (%r11)
0000011b : 31B7                  #      movq (%rsp), %r11
0000011d : 507008000000          #      addq $8, %rsp
00000123 : 010B                  #      ret %r11
00000125 :                       #  get_random_array:
00000125 :                       #  .LFB5:
00000125 : 517028000000          #      subq $40, %rsp
0000012b : 7DB720000000          #      movq %r11, 32(%rsp)
00000131 : 7DD718000000          #      movq %r13, 24(%rsp)
00000137 : 7DC710000000          #      movq %r12, 16(%rsp)
0000013d : 7D4708000000          #      movq %rbp, 8(%rsp)
00000143 : 3917                  #      movq %rbx, (%rsp)
00000145 : 21C6                  #      movq %rdi, %r12
00000147 : 4EB000010000          #      call allocate, %r11
0000014d : 21D0                  #      movq %rax, %r13
0000014f : 641000000000          #      movq $0, %ebx
00000155 :                       #  .L14:
00000155 : 451C80010000          #      cble %r12, %rbx, .L17
0000015b : B74D1300000000        #      leaq 0(%r13, %rbx, 8), %rbp
00000162 : 640000000000          #      movq $0, %eax
00000168 : 4EB01a000000          #      call gen_random, %r11
0000016e : 7D0400000000          #      movq %rax, 0(%rbp)
00000174 : 501001000000          #      addq $1, %rbx
0000017a : 4F0055010000          #      jmp .L14
00000180 :                       #  .L17:
00000180 : 210D                  #      movq %r13, %rax
00000182 : 3117                  #      movq (%rsp), %rbx
00000184 : 754708000000          #      movq 8(%rsp), %rbp
0000018a : 75C710000000          #      movq 16(%rsp), %r12
00000190 : 75D718000000          #      movq 24(%rsp), %r13
00000196 : 75B720000000          #      movq 32(%rsp), %r11
0000019c : 507028000000          #      addq $40, %rsp
000001a2 : 010B                  #      ret %r11
000001a4 :                       #  read_array:
000001a4 :                       #  .LFB6:
000001a4 : 517028000000          #      subq $40, %rsp
000001aa : 7DB720000000          #      movq %r11, 32(%rsp)
000001b0 : 7DD718000000          #      movq %r13, 24(%rsp)
000001b6 : 7DC710000000          #      movq %r12, 16(%rsp)
000001bc : 7D4708000000          #      movq %rbp, 8(%rsp)
000001c2 : 3917                  #      movq %rbx, (%rsp)
000001c4 : 21C6                  #      movq %rdi, %r12
000001c6 : 4EB000010000          #      call allocate, %r11
000001cc : 21D0                  #      movq %rax, %r13
000001ce : 641000000000          #      movq $0, %ebx
000001d4 :                       #  .L19:
000001d4 : 451Cff010000          #      cble %r12, %rbx, .L22
000001da : B74D1300000000        #      leaq 0(%r13, %rbx, 8), %rbp
000001e1 : 640000000000          #      movq $0, %eax
000001e7 : 4EB000000000          #      call read_long, %r11
000001ed : 7D0400000000          #      movq %rax, 0(%rbp)
000001f3 : 501001000000          #      addq $1, %rbx
000001f9 : 4F00d4010000          #      jmp .L19
000001ff :                       #  .L22:
000001ff : 210D                  #      movq %r13, %rax
00000201 : 3117                  #      movq (%rsp), %rbx
00000203 : 754708000000          #      movq 8(%rsp), %rbp
00000209 : 75C710000000          #      movq 16(%rsp), %r12
0000020f : 75D718000000          #      movq 24(%rsp), %r13
00000215 : 75B720000000          #      movq 32(%rsp), %r11
0000021b : 507028000000          #      addq $40, %rsp
00000221 : 010B                  #      ret %r11
00000223 :                       #  quick_sort:
00000223 :                       #  .LFB11:
00000223 : 517008000000          #      subq $8, %rsp
00000229 : 39B7                  #      movq %r11, (%rsp)
0000022b : 45532e030000          #      cble %rdx, %rsi, .L36
00000231 : 517018000000          #      subq $24, %rsp
00000237 : 7DC710000000          #      movq %r12, 16(%rsp)
0000023d : 7D4708000000          #      movq %rbp, 8(%rsp)
00000243 : 3917                  #      movq %rbx, (%rsp)
00000245 : 2116                  #      movq %rdi, %rbx
00000247 : 21C3                  #      movq %rdx, %r12
00000249 : 2183                  #      movq %rdx, %r8
0000024b : 1185                  #      subq %rsi, %r8
0000024d : F78007000000a5020000  #      cbge $7, %r8, .L39
00000257 : 930530                #      leaq (%rsi, %rdx, 1), %rax
0000025a : 560001000000          #      sarq $1, %rax
00000260 : 93B603                #      leaq (%rdi, %rax, 8), %r11
00000263 : 316B                  #      movq (%r11), %rdi
00000265 : A585ffffffff          #      leaq -1(%rsi), %r8
0000026b : A53301000000          #      leaq 1(%rdx), %rdx
00000271 :                       #  .L31:
00000271 : 508001000000          #      addq $1, %r8
00000277 : 93A183                #      leaq (%rbx, %r8, 8), %r10
0000027a : 319A                  #      movq (%r10), %r9
0000027c : 469671020000          #      cbg %rdi, %r9, .L31
00000282 :                       #  .L33:
00000282 : 2143                  #      movq %rdx, %rbp
00000284 : 513001000000          #      subq $1, %rdx
0000028a : 930133                #      leaq (%rbx, %rdx, 8), %rax
0000028d : 3120                  #      movq (%rax), %rcx
0000028f : 442682020000          #      cbl %rdi, %rcx, .L33
00000295 : 4583fe020000          #      cble %rdx, %r8, .L34
0000029b : 392A                  #      movq %rcx, (%r10)
0000029d : 3990                  #      movq %r9, (%rax)
0000029f : 4F0071020000          #      jmp .L31
000002a5 :                       #  .L39:
000002a5 : 932653                #      leaq (%rdi, %rsi, 8), %rcx
000002a8 : 646001000000          #      movq $1, %edi
000002ae : 4F00e7020000          #      jmp .L26
000002b4 :                       #  .L29:
000002b4 : B7B20308000000        #      leaq 8(%rcx, %rax, 8), %r11
000002bb : 393B                  #      movq %rdx, (%r11)
000002bd : 510001000000          #      subq $1, %rax
000002c3 :                       #  .L27:
000002c3 : F60000000000d8020000  #      cbg $0, %rax, .L28
000002cd : 93B203                #      leaq (%rcx, %rax, 8), %r11
000002d0 : 313B                  #      movq (%r11), %rdx
000002d2 : 4653b4020000          #      cbg %rdx, %rsi, .L29
000002d8 :                       #  .L28:
000002d8 : B7B20308000000        #      leaq 8(%rcx, %rax, 8), %r11
000002df : 395B                  #      movq %rsi, (%r11)
000002e1 : 506001000000          #      addq $1, %rdi
000002e7 :                       #  .L26:
000002e7 : 468612030000          #      cbg %rdi, %r8, .L23
000002ed : 93B263                #      leaq (%rcx, %rdi, 8), %r11
000002f0 : 315B                  #      movq (%r11), %rsi
000002f2 : A506ffffffff          #      leaq -1(%rdi), %rax
000002f8 : 4F00c3020000          #      jmp .L27
000002fe :                       #  .L34:
000002fe : 2161                  #      movq %rbx, %rdi
00000300 : 4EB023020000          #      call quick_sort, %r11
00000306 : 213C                  #      movq %r12, %rdx
00000308 : 2154                  #      movq %rbp, %rsi
0000030a : 2161                  #      movq %rbx, %rdi
0000030c : 4EB023020000          #      call quick_sort, %r11
00000312 :                       #  .L23:
00000312 : 3117                  #      movq (%rsp), %rbx
00000314 : 754708000000          #      movq 8(%rsp), %rbp
0000031a : 75C710000000          #      movq 16(%rsp), %r12
00000320 : 75B718000000          #      movq 24(%rsp), %r11
00000326 : 507020000000          #      addq $32, %rsp
0000032c : 010B                  #      ret %r11
0000032e :                       #  .L36:
0000032e : 31B7                  #      movq (%rsp), %r11
00000330 : 507008000000          #      addq $8, %rsp
00000336 : 010B                  #      ret %r11
00000338 :                       #  run:
00000338 :                       #  .LFB12:
00000338 : 517020000000          #      subq $32, %rsp
0000033e : 7DB718000000          #      movq %r11, 24(%rsp)
00000344 : 7DC710000000          #      movq %r12, 16(%rsp)
0000034a : 7D4708000000          #      movq %rbp, 8(%rsp)
00000350 : 3917                  #      movq %rbx, (%rsp)
00000352 : 640000000000          #      movq $0, %eax
00000358 : 4EB0e0000000          #      call init_allocator, %r11
0000035e : 640000000000          #      movq $0, %eax
00000364 : 4EB000000000          #      call read_long, %r11
0000036a : 2140                  #      movq %rax, %rbp
0000036c : 524001000000          #      andq $1, %ebp
00000372 : 520002000000          #      andq $2, %eax
00000378 : 2110                  #      movq %rax, %rbx
0000037a : 640000000000          #      movq $0, %eax
00000380 : 4EB000000000          #      call read_long, %r11
00000386 : 21C0                  #      movq %rax, %r12
00000388 : F01000000000d8030000  #      cbe $0, %rbx, .L41
00000392 : 2160                  #      movq %rax, %rdi
00000394 : 4EB0a4010000          #      call read_array, %r11
0000039a : 2110                  #      movq %rax, %rbx
0000039c :                       #  .L42:
0000039c : A53Cffffffff          #      leaq -1(%r12), %rdx
000003a2 : 645000000000          #      movq $0, %esi
000003a8 : 2161                  #      movq %rbx, %rdi
000003aa : 4EB023020000          #      call quick_sort, %r11
000003b0 : F14000000000e8030000  #      cbne $0, %rbp, .L45
000003ba :                       #  .L40:
000003ba : 2101                  #      movq %rbx, %rax
000003bc : 3117                  #      movq (%rsp), %rbx
000003be : 754708000000          #      movq 8(%rsp), %rbp
000003c4 : 75C710000000          #      movq 16(%rsp), %r12
000003ca : 75B718000000          #      movq 24(%rsp), %r11
000003d0 : 507020000000          #      addq $32, %rsp
000003d6 : 010B                  #      ret %r11
000003d8 :                       #  .L41:
000003d8 : 2160                  #      movq %rax, %rdi
000003da : 4EB025010000          #      call get_random_array, %r11
000003e0 : 2110                  #      movq %rax, %rbx
000003e2 : 4F009c030000          #      jmp .L42
000003e8 :                       #  .L45:
000003e8 : 2151                  #      movq %rbx, %rsi
000003ea : 216C                  #      movq %r12, %rdi
000003ec : 4EB083000000          #      call print_array, %r11
000003f2 : 4F00ba030000          #      jmp .L40
000003f8 :                       #  .LFE0:
000003f8 :                       #  .LFE1:
000003f8 :                       #  .LFE2:
000003f8 :                       #  .LFE3:
000003f8 :                       #  .LFE4:
000003f8 :                       #  .LFE7:
000003f8 :                       #  .LFE8:
000003f8 :                       #  .LFE9:
000003f8 :                       #  .LFE5:
000003f8 :                       #  .LFE6:
000003f8 :                       #  .LFE11:
000003f8 :                       #  .LFE12:
000003f8 : 0000000000000000      #      .comm cur_allocator,8,8
